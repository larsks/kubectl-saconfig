name: release

on:
  push:
    tags:
      - 'v[0-9]*'

permissions:
  contents: write

jobs:
  build:
    name: Build binary
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos:
          - linux
          - darwin
        goarch:
          - amd64
          - arm64
          - arm
        include:
          - goos: linux
            goarch: arm
            goarm: 7
        exclude:
          - goos: darwin
            goarch: arm

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.23'

      - name: Build binaries
        run: make
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "kubectl-saconfig-${{ matrix.goos }}-${{ matrix.goarch }}"
          path: "build/kubectl-saconfig-${{ matrix.goos }}-${{ matrix.goarch }}"

  release:
    name: Build release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}

    - name: Extract tag message
      run: |
          # We need to strip the signature from the tag message
          git tag -l ${{ github.ref_name }} --format='%(contents)' |
            sed '/-----BEGIN PGP SIGNATURE-----/,/-----END PGP SIGNATURE-----/d' > body.md
          cat body.md

    - name: Create directory for release binaries
      run: |
        mkdir -p binaries

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: binaries/

    - name: Create archives
      run: |
          cp README.md binaries/
          for path in binaries/kubectl-saconfig*; do
            name=${path##*/}
            chmod 755 "$path"
            tar -C binaries -cz -f "$name.tar.gz" \
              --transform 's|kubectl-saconfig.*|kubectl-saconfig|' \
              "$name" ../README.md ../LICENSE
          done

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "*.tar.gz"
        bodyFile: "body.md"
